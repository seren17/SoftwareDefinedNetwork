//
// Generated file, do not edit! Created by nedtool 5.4 from Switch.msg.msg.
//

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#ifndef __SWITCH_MSG_M_H
#define __SWITCH_MSG_M_H

#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0504
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



/**
 * Class generated from <tt>Switch.msg.msg:19</tt> by nedtool.
 * <pre>
 * //
 * // TODO generated message class
 * //
 * message Switch_msg
 * {
 *     int gate_index;
 *     int module_type;
 *     string source_name;
 * }
 * </pre>
 */
class Switch_msg : public ::omnetpp::cMessage
{
  protected:
    int gate_index;
    int module_type;
    ::omnetpp::opp_string source_name;

  private:
    void copy(const Switch_msg& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const Switch_msg&);

  public:
    Switch_msg(const char *name=nullptr, short kind=0);
    Switch_msg(const Switch_msg& other);
    virtual ~Switch_msg();
    Switch_msg& operator=(const Switch_msg& other);
    virtual Switch_msg *dup() const override {return new Switch_msg(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
    virtual int getGate_index() const;
    virtual void setGate_index(int gate_index);
    virtual int getModule_type() const;
    virtual void setModule_type(int module_type);
    virtual const char * getSource_name() const;
    virtual void setSource_name(const char * source_name);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const Switch_msg& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, Switch_msg& obj) {obj.parsimUnpack(b);}


#endif // ifndef __SWITCH_MSG_M_H

