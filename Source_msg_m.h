//
// Generated file, do not edit! Created by nedtool 5.4 from Source_msg.msg.
//

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#ifndef __SOURCE_MSG_M_H
#define __SOURCE_MSG_M_H

#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0504
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



/**
 * Class generated from <tt>Source_msg.msg:19</tt> by nedtool.
 * <pre>
 * //
 * // TODO generated message class
 * //
 * message Source_msg
 * {
 *     int sourceid;
 *     int destid;
 *     int networkId;
 *     int equipmentId;
 *     int interfaceId;
 *     int virtualLinkId;
 *     int seqNum;
 *     int partitionId;
 * }
 * </pre>
 */
class Source_msg : public ::omnetpp::cMessage
{
  protected:
    int sourceid;
    int destid;
    int networkId;
    int equipmentId;
    int interfaceId;
    int virtualLinkId;
    int seqNum;
    int partitionId;

  private:
    void copy(const Source_msg& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const Source_msg&);

  public:
    Source_msg(const char *name=nullptr, short kind=0);
    Source_msg(const Source_msg& other);
    virtual ~Source_msg();
    Source_msg& operator=(const Source_msg& other);
    virtual Source_msg *dup() const override {return new Source_msg(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
    virtual int getSourceid() const;
    virtual void setSourceid(int sourceid);
    virtual int getDestid() const;
    virtual void setDestid(int destid);
    virtual int getNetworkId() const;
    virtual void setNetworkId(int networkId);
    virtual int getEquipmentId() const;
    virtual void setEquipmentId(int equipmentId);
    virtual int getInterfaceId() const;
    virtual void setInterfaceId(int interfaceId);
    virtual int getVirtualLinkId() const;
    virtual void setVirtualLinkId(int virtualLinkId);
    virtual int getSeqNum() const;
    virtual void setSeqNum(int seqNum);
    virtual int getPartitionId() const;
    virtual void setPartitionId(int partitionId);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const Source_msg& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, Source_msg& obj) {obj.parsimUnpack(b);}


#endif // ifndef __SOURCE_MSG_M_H

