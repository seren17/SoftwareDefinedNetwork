//
// Generated file, do not edit! Created by nedtool 5.4 from Hata_msg.msg.
//

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#ifndef __HATA_MSG_M_H
#define __HATA_MSG_M_H

#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0504
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



/**
 * Class generated from <tt>Hata_msg.msg:19</tt> by nedtool.
 * <pre>
 * //
 * // TODO generated message class
 * //
 * message Hata_msg
 * {
 *     bool faildetect = TRUE;
 *     int kynkid;
 *     int hdfid;
 * }
 * </pre>
 */
class Hata_msg : public ::omnetpp::cMessage
{
  protected:
    bool faildetect;
    int kynkid;
    int hdfid;

  private:
    void copy(const Hata_msg& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const Hata_msg&);

  public:
    Hata_msg(const char *name=nullptr, short kind=0);
    Hata_msg(const Hata_msg& other);
    virtual ~Hata_msg();
    Hata_msg& operator=(const Hata_msg& other);
    virtual Hata_msg *dup() const override {return new Hata_msg(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
    virtual bool getFaildetect() const;
    virtual void setFaildetect(bool faildetect);
    virtual int getKynkid() const;
    virtual void setKynkid(int kynkid);
    virtual int getHdfid() const;
    virtual void setHdfid(int hdfid);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const Hata_msg& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, Hata_msg& obj) {obj.parsimUnpack(b);}


#endif // ifndef __HATA_MSG_M_H

